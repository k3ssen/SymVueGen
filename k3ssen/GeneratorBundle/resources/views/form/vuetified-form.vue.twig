{% use "form_div_layout.html.twig" %}

{%- block form_widget_compound -%}
    <v-row {{ block('widget_container_attributes') }}>
        {%- if form is rootform -%}
            {{ form_errors(form) }}
        {%- endif -%}
        {{- block('form_rows') -}}
        {{- form_rest(form) -}}
    </v-row>
{%- endblock form_widget_compound -%}

{%- block form_row -%}
    {%- set widget_attr = {} -%}
    {%- if help is not empty -%}
        {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
    {%- endif -%}
    <v-col {% with {attr: row_attr|default({})} %}{{ block('attributes') }}{% endwith %}>
        {%- set type = type|default('text') -%}
        {{- form_widget(form, widget_attr) -}}
    </v-col>
{%- endblock form_row -%}

{%- block form_widget_simple -%}
    {%- set type = type|default('text') -%}
    {%- if type == 'range' or type == 'color' -%}
        {# Attribute "required" is not supported #}
        {%- set required = false -%}
    {%- endif -%}
    {% if type == 'file' %}
        {% set attr = attr|filter((attributeName, attrValue) => attributeName == 'length') %}
        <v-file-input
            {{ input_style|default('outlined') }}
            id="{{ id }}" name="{{ full_name }}" error-count="10"
            {{ block('widget_attributes') }}
        ></v-file-input>
    {% elseif type != 'hidden' %}
        <v-text-field
            {{ input_style|default('outlined') }}
            type="{{ type }}"
            {% if value is not empty %}value="{{ value }}" {% endif %}
            {{ block('widget_attributes') }}
        ></v-text-field>
    {% else %}
        {{ parent() }}
    {% endif %}
{%- endblock form_widget_simple -%}

{%- block textarea_widget -%}
    <v-textarea
        {{ input_style|default('outlined') }}
        {% if value is not empty %}value="{{ value }}" {% endif %}
        {{ block('widget_attributes') }}
    ></v-textarea>
{%- endblock textarea_widget -%}

{%- block widget_attributes -%}
    id="{{ id }}" name="{{ full_name }}" error-count="10"
    {% if not attr['label']|default(null) %}label="{{ label ? label|trans : name|trans }}"{% endif %}
    {%- if disabled %} disabled="disabled"{% endif -%}
    {%- if required %} required="required"{% endif -%}
    {%- if help %} messages="{{ help|trans }}"{% endif -%}
    {%- if errors|length > 0 %} :error="true" :error-messages="[{%- for error in errors -%}'{{ error.message ~ (loop.last ? "" : ", ") }}'{% endfor %}]"{% endif %}
    {{ block('attributes') }}
{%- endblock widget_attributes -%}

{% block form_label %}
    {% if errors|length > 0 %}
        {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' error--text')|trim}) %}
    {% endif %}
    {{ parent() }}
{% endblock %}

{%- block choice_widget_collapsed -%}
    {%- if required and placeholder is none and not placeholder_in_choices and not multiple and (attr.size is not defined or attr.size <= 1) -%}
        {% set required = false %}
    {%- endif -%}
    {% set useCombobox = 'tags' in attr %}
    {% if multiple %}
        <input v-for="value in {{ form.vars.attr['v-model'] }}" type="hidden" name="{{ full_name }}" :value="value">
    {% else %}
        <input type="hidden" name="{{ full_name }}" v-model="{{ form.vars.attr['v-model'] }}">
    {% endif %}
    {% set full_name = 'form_ignore_fields[]' %}
    <{{ useCombobox ? 'v-combobox' : 'v-autocomplete' }}
            {{ multiple ? ':chips="true"' : '' }}
            :clearable="true"
            :deletable-chips="true"
            item-value="value"
            :auto-select-first="true"
            :return-object="false" {# otherwise combobox will return object-value (somehow this is true for combobox by default, while it isnt for autocomplete) #}
            autocomplete="off" {# disables native browser autocomplete functionaly #}
            {{ input_style|default('outlined') }}
            {% if multiple %} :multiple="true"{% endif %}
            {# items are supposed to be set through the ChoiceTypeExtension #}
            {{ block('widget_attributes') }}
    >
    {% if useCombobox %}
        <template v-slot:no-data>
            <v-list-item>
                <v-list-item-content>
                    <v-list-item-title class="pt-5 pl-5 pb-5">
                        No results. Press <kbd>enter</kbd> to create a new one.
                    </v-list-item-title>
                </v-list-item-content>
            </v-list-item>
        </template>
    {% endif %}
    </{{ useCombobox ? 'v-combobox' : 'v-autocomplete' }}>
{%- endblock choice_widget_collapsed -%}

{%- block choice_widget_selected_options -%}
    {% for group_label, choice in options %}
        {%- if choice is iterable -%}
            {% set options = choice %}
            {{- block('choice_widget_selected_options') -}}
        {%- else -%}
            {{ choice.value }},
        {%- endif -%}
    {% endfor %}
{%- endblock choice_widget_selected_options -%}

{#{%- block choice_widget_disabled_options -%}#}
{#    {% for group_label, choice in options %}#}
{#        {%- if choice is iterable -%}#}
{#            {% set options = choice %}#}
{#            {{- block('choice_widget_disabled_options') -}}#}
{#        {%- else -%}#}
{#            {%- if choice is selectedchoice(value) -%}#}
{#                {{- choice.value }},#}
{#            {%- endif %}#}
{#        {%- endif -%}#}
{#    {% endfor %}#}
{#{%- endblock choice_widget_disabled_options -%}#}

{%- block collection_widget -%}
    <div {{ block('widget_container_attributes') }}>
        <strong>{{ label | raw }}</strong>
        {{ add_vue_data('form.' ~ form.vars.id ~ '.prototype' , "{
            template: `"~ block('collection_widget_subform') ~"`,
            delimiters: ['{', '}'],
            mixins: [mixin],
        }") }}
        <collection-type
                :allow_add="{{ form.vars.allow_add ? 'true': 'false' }}"
                :allow_delete="{{ form.vars.allow_delete ? 'true': 'false' }}"
                prototype_name="{{ prototype is defined and not prototype.rendered ? prototype.vars.name : '' }}"
                :prototype-component="{{ 'form.' ~ form.vars.id ~ '.prototype' }}"
                :initialCount="{{ form|length }}"
                v-model="form"
        >
            {% for field in form %}
                {{ block('collection_widget_subform') }}
            {% endfor %}
        </collection-type>
    </div>
{%- endblock collection_widget -%}

{%- block collection_widget_subform -%}
    <v-card class="col-12 subform mb-2">
        <div class="row pl-3">
            {{ form_widget((field is defined ? field : prototype), {label: false}) }}
            <div class="col-4 col-sm-3 col-md-1">
                <v-btn color="error" {% if field is not defined %}@click="$emit('remove')"{% else %}onClick="this.closest('.subform').remove()"{% endif %}>
                    Remove
                </v-btn>
            </div>
        </div>
    </v-card>
{%- endblock collection_widget_subform -%}

{%- block choice_widget_expanded -%}
    <v-radio-group {{ block('widget_container_attributes') }}>
        {%- for child in form %}
            {{- form_widget(child) -}}
        {% endfor -%}
    </v-radio-group>
{%- endblock choice_widget_expanded -%}

{%- block radio_widget -%}
    <v-radio
        {{ block('widget_attributes') }}
        label="{{ label|trans()  }}"
        value="{{ value }}"
    ></v-radio>
{%- endblock radio_widget -%}


{%- block checkbox_widget -%}
    <v-checkbox {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %}></v-checkbox>
{%- endblock checkbox_widget -%}


{#{%- block date_widget -%}#}
{#    {%- if widget == 'single_text' -%}#}
{#        <v-menu#}
{#        v-model="{{ attr['v-model'] ~ '_menu' }}"#}
{#        :close-on-content-click="false"#}
{#        :nudge-right="40"#}
{#        transition="scale-transition"#}
{#        offset-y#}
{#        min-width="290px"#}
{#        >#}
{#            <template v-slot:activator="{ on }">#}
{#            {{ block('form_widget_simple') }}#}
{#            {{ add_vue_data(attr['v-model'] ~ '_menu', false) }}#}
{#            </template>#}
{#            <v-date-picker v-model="{{ attr['v-model']  }}" @input="{{ attr['v-model'] ~ '_menu' }} = false"></v-date-picker>#}
{#        </v-menu>#}
{#    {%- else -%}#}
{#        <div {{ block('widget_container_attributes') }}>#}
{#            {{- date_pattern|replace({#}
{#                '{{ year }}':  form_widget(form.year),#}
{#                '{{ month }}': form_widget(form.month),#}
{#                '{{ day }}':   form_widget(form.day),#}
{#            })|raw -}}#}
{#        </div>#}
{#    {%- endif -%}#}

{#{%- endblock date_widget -%}#}
